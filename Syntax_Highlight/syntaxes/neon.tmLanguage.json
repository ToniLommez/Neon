{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Neon",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#storage_types"
		},
		{
			"include": "#numeric_literals"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"match": "//.*",
					"name": "comment.double-slash.neon"
				},
				{
					"match": "/!/.+",
					"name": "comment.warning.neon"
				},
				{
					"match": "/\\?/.+",
					"name": "comment.question.neon"
				},
				{
					"match": "/\\.\\.\\.\\/.+",
					"name": "comment.etc.neon"
				},
				{
					"match": "/\\+/.+",
					"name": "comment.suggestion.neon"
				},
				{
					"match": "/-/.+",
					"name": "comment.deprecated.neon"
				},
				{
					"match": "/@/.+",
					"name": "comment.reference.neon"
				},
				{
					"match": "/#/.+",
					"name": "comment.todo.neon"
				},
				{
					"match": "\/\\p{Emoji}\uFE0F?\/.+",
					"name": "comment.emoji.neon"
				},
				{
					"match": "/~/.+",
					"name": "comment.experimental.neon"
				},
				{
					"match": "/\\*/.+",
					"name": "comment.bug.neon"
				},
				{
					"begin": "/\\*",
					"end": "\\*/",
					"name": "comment.block.neon",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.neon"
						}
					}
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.neon",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.format.placeholder.neon",
					"match": "\\{(\\w*)\\}",
					"captures": {
						"1": {
							"name": "storage.type.neon"
						}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"comment": "Flow control keywords",
					"match": "\\b(loop|for|while|until|do|pulse|before|after|break|if|else|is|then|case|of|in|!>|<!|\\|>|<\\|)\\b",
					"name": "keyword.control.neon"
				},
				{
					"match": "=>",
					"name": "keyword.control.neon"
				},
				{
					"comment": "Variables keywords",
					"match": "(\\blet(!)?)\\s",
					"name": "storage.type.neon"
				}
			]
		},
		"operators": {
			"comment": "Note that the order here is very important!",
			"patterns": [
				{
					"match": "(?<=[^a-zA-Z~])(\\*|&)(?=\\w)",
					"name": "keyword.operator.address.neon"
				},
				{
					"match": ":",
					"name": "keyword.operator.colon"
				},
				{
					"match": ",",
					"name": "keyword.operator.comma"
				},
				{
					"match": "\\-\\-",
					"name": "keyword.operator.decrement.neon"
				},
				{
					"match": "\\+\\+",
					"name": "keyword.operator.increment.neon"
				},
				{
					"match": "(==|!=|<=|>=|<(?!<)|>(?!>))",
					"name": "keyword.operator.comparison.neon"
				},
				{
					"match": "(&&|\\|\\||!)",
					"name": "keyword.operator.logical.neon"
				},
				{
					"match": "(=|\\+=|\\-=|\\*=|/=|%=|<<=|>>=|>>>=|<<<=|&=|~&=|\\|=|~\\|=|\\^=|~\\^=)",
					"name": "keyword.operator.assignment.neon"
				},
				{
					"match": "(\\+|\\-|\\*|/|%)",
					"name": "keyword.operator.arithmetic.neon"
				},
				{
					"match": "<<|>>|<<<|>>>|~|((~?)&|\\||\\^)",
					"name": "keyword.operator.arithmetic.bitwise.neon"
				},
				{
					"match": "\\.\\.\\.",
					"name": "keyword.operator.ellipsis.neon"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"comment": "Function declarations",
					"name": "function_name",
					"match": "\\b(fn!|fn)\\s+(\\w+)\\s*(\\([^\\)]*\\))?\\s*(=>)",
					"captures": {
						"1": {
							"name": "keyword.function.neon"
						},
						"2": {
							"name": "entity.name.function.neon"
						},
						"3": {
							"patterns": [
								{
									"match": "\\d\\w*",
									"name": "invalid.illegal.identifier.neon"
								}
							]
						},
						"4": {
							"name": "keyword.control.neon"
						}
					}
				},
				{
					"comment": "Method declarations",
					"name": "method_name",
					"match": "^(fn!|fn)\\s+(\\w+)(\\s*(=>)\\s*(\\w+))?",
					"captures": {
						"1": {
							"name": "keyword.function.neon"
						},
						"2": {
							"name": "entity.name.function.neon"
						},
						"3": {
							"name": "keyword.control.neon"
						}
					}
				},
				{
					"comment": "Built-in functions",
					"match": "\\b(print|println)\\b",
					"name": "support.function.builtin.go"
				},
				{
					"comment": "Functions",
					"match": "(\\bfn\\b)|(\\w+)(?=\\()",
					"captures": {
						"1": {
							"name": "keyword.function.neon"
						},
						"2": {
							"patterns": [
								{
									"match": "\\d\\w*",
									"name": "invalid.illegal.identifier.neon"
								},
								{
									"match": "\\w+",
									"name": "support.function.neon"
								}
							]
						}
					}
				}
			]
		},
		"storage_types": {
			"patterns": [
				{
					"match": "\\bbool\\b",
					"name": "storage.type.boolean.neon"
				},
				{
					"match": "\\b(int|float|double)\\b",
					"name": "storage.type.numeric.neon"
				},
				{
					"match": "(\\b|\\*)((u|i)(8|16|32|64)|f(32|64))\\b",
					"name": "storage.type.numeric.neon"
				},
				{
					"match": "\\bstring\\b",
					"name": "storage.type.string.neon"
				},
				{
					"comment": "Tipos avancados",
					"match": "\\b(any|obj)\\b",
					"name": "storage.type.string.neon"
				}
			]
		},
		"numeric_literals": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.neon",
					"match": "-?(?<!\\w)\\.?\\d(?:(?:[0-9a-zA-Z_\\.])|(?<=[eEpP])[+-])*"
				},
				{
					"comment": "Language constants",
					"match": "\\b(true|false|nil)\\b",
					"name": "constant.language.go"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.assignment.neon",
					"match": "."
				}
			]
		}
	},
	"scopeName": "source.neon"
}